/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BLL.SanPhamBLL;
import DAO.SanPhamDAO;
import DTO.SanPhamDTO;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author PC
 */
public class SanPhamGUI extends javax.swing.JPanel {
    SanPhamBLL spBLL=new SanPhamBLL();
    
    SanPhamDAO spDAO= new SanPhamDAO();
    
    ArrayList<SanPhamDTO> arrSP=new ArrayList<SanPhamDTO>();
    
    DefaultTableModel modelSP = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // không cho phép chỉnh sửa giá trị các ô trong bảng
        }
    };
    /**
     * Creates new form NhaCungCapGUI
     */
    public SanPhamGUI() {
        
        initComponents();
        //Khởi tạo
        jTableSP.setModel(modelSP);
        
        
        modelSP.addColumn("STT");
        modelSP.addColumn("Mã điện thoại");
        modelSP.addColumn("Tên điện thoại");
        modelSP.addColumn("Hãng");
        modelSP.addColumn("Dung lượng");
        modelSP.addColumn("Số lượng");
        modelSP.addColumn("Đơn giá");
        modelSP.addColumn("Hình ảnh");
        
        loadSPlist();
        
        
        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelMaDT = new javax.swing.JLabel();
        jLabelTenDT = new javax.swing.JLabel();
        jLabelHang = new javax.swing.JLabel();
        jLabelDungLuong = new javax.swing.JLabel();
        jLabelGia = new javax.swing.JLabel();
        jTextFieldDungLuong = new javax.swing.JTextField();
        jTextFieldGia = new javax.swing.JTextField();
        jTextFieldMaDT = new javax.swing.JTextField();
        jButtonAnh = new javax.swing.JButton();
        jLabelTimKiem = new javax.swing.JLabel();
        jTextFieldTimKiem = new javax.swing.JTextField();
        jTextFieldTenDT = new javax.swing.JTextField();
        jButtonThem = new javax.swing.JButton();
        jButtonSua = new javax.swing.JButton();
        jButtonXoa = new javax.swing.JButton();
        jButtonTimKiem = new javax.swing.JButton();
        jTextFieldHinhAnh = new javax.swing.JTextField();
        jLabelHinhAnh = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSP = new javax.swing.JTable();
        jComboBoxHang = new javax.swing.JComboBox<>();
        jLabelAnh = new javax.swing.JLabel();
        jButtonLamMoi = new javax.swing.JButton();
        jComboBoxLoc = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(51, 51, 51));

        jLabelMaDT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelMaDT.setForeground(new java.awt.Color(255, 255, 255));
        jLabelMaDT.setText("Mã điện thoại");

        jLabelTenDT.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTenDT.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTenDT.setText("Tên điện thoại");

        jLabelHang.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelHang.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHang.setText("Hãng");

        jLabelDungLuong.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelDungLuong.setForeground(new java.awt.Color(255, 255, 255));
        jLabelDungLuong.setText("Dung lượng");

        jLabelGia.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelGia.setForeground(new java.awt.Color(255, 255, 255));
        jLabelGia.setText("Giá");

        jTextFieldDungLuong.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldDungLuong.setPreferredSize(new java.awt.Dimension(60, 30));

        jTextFieldGia.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldGia.setPreferredSize(new java.awt.Dimension(60, 30));

        jTextFieldMaDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldMaDT.setEnabled(false);
        jTextFieldMaDT.setPreferredSize(new java.awt.Dimension(60, 30));

        jButtonAnh.setBackground(new java.awt.Color(35, 134, 54));
        jButtonAnh.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonAnh.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAnh.setText("Chọn ảnh");
        jButtonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAnhActionPerformed(evt);
            }
        });

        jLabelTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTimKiem.setText("Tìm kiếm");

        jTextFieldTimKiem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTimKiemActionPerformed(evt);
            }
        });

        jTextFieldTenDT.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldTenDT.setPreferredSize(new java.awt.Dimension(60, 30));

        jButtonThem.setBackground(new java.awt.Color(35, 134, 54));
        jButtonThem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonThem.setForeground(new java.awt.Color(255, 255, 255));
        jButtonThem.setText("Thêm");
        jButtonThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonThemActionPerformed(evt);
            }
        });

        jButtonSua.setBackground(new java.awt.Color(35, 134, 54));
        jButtonSua.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonSua.setForeground(new java.awt.Color(255, 255, 255));
        jButtonSua.setText("Sửa");
        jButtonSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSuaActionPerformed(evt);
            }
        });

        jButtonXoa.setBackground(new java.awt.Color(35, 134, 54));
        jButtonXoa.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonXoa.setForeground(new java.awt.Color(255, 255, 255));
        jButtonXoa.setText("Xóa");
        jButtonXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonXoaActionPerformed(evt);
            }
        });

        jButtonTimKiem.setBackground(new java.awt.Color(35, 134, 54));
        jButtonTimKiem.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonTimKiem.setForeground(new java.awt.Color(255, 255, 255));
        jButtonTimKiem.setText("Tìm kiếm");
        jButtonTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonTimKiemActionPerformed(evt);
            }
        });

        jTextFieldHinhAnh.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextFieldHinhAnh.setPreferredSize(new java.awt.Dimension(60, 30));
        jTextFieldHinhAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHinhAnhActionPerformed(evt);
            }
        });

        jLabelHinhAnh.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabelHinhAnh.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHinhAnh.setText("Hình ảnh");

        jTableSP.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableSP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableSPMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableSP);

        jComboBoxHang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "IPhone", "Samsung", "Nokia", "Xiaomi", "OPPO", " ", " " }));
        jComboBoxHang.setPreferredSize(new java.awt.Dimension(60, 30));
        jComboBoxHang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxHangActionPerformed(evt);
            }
        });

        jLabelAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabelAnh.setPreferredSize(new java.awt.Dimension(100, 100));

        jButtonLamMoi.setBackground(new java.awt.Color(35, 134, 54));
        jButtonLamMoi.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButtonLamMoi.setForeground(new java.awt.Color(255, 255, 255));
        jButtonLamMoi.setText("Làm mới");
        jButtonLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLamMoiActionPerformed(evt);
            }
        });

        jComboBoxLoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hãng", "Tên" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(206, 206, 206)
                        .addComponent(jLabelTimKiem)
                        .addGap(28, 28, 28)
                        .addComponent(jTextFieldTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                        .addComponent(jComboBoxLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jButtonTimKiem))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap(199, Short.MAX_VALUE)
                                .addComponent(jButtonThem)
                                .addGap(65, 65, 65)
                                .addComponent(jButtonSua)
                                .addGap(64, 64, 64)
                                .addComponent(jButtonXoa))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelHang)
                                            .addComponent(jLabelDungLuong))
                                        .addGap(30, 30, 30))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabelMaDT)
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldMaDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldDungLuong, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jComboBoxHang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelHinhAnh)
                                        .addGap(57, 57, 57)
                                        .addComponent(jTextFieldHinhAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelGia)
                                        .addGap(93, 93, 93)
                                        .addComponent(jTextFieldGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelTenDT)
                                        .addGap(26, 26, 26)
                                        .addComponent(jTextFieldTenDT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(67, 67, 67)
                                .addComponent(jButtonLamMoi)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(56, 56, 56)))))
                .addGap(18, 18, 18)
                .addComponent(jButtonAnh)
                .addGap(65, 65, 65))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMaDT)
                    .addComponent(jTextFieldMaDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTenDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTenDT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHang)
                    .addComponent(jLabelGia)
                    .addComponent(jTextFieldGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldDungLuong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonAnh)
                    .addComponent(jTextFieldHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelHinhAnh)
                    .addComponent(jLabelDungLuong))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonThem)
                            .addComponent(jButtonSua)
                            .addComponent(jButtonXoa)
                            .addComponent(jButtonLamMoi)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabelAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTimKiem)
                    .addComponent(jButtonTimKiem)
                    .addComponent(jComboBoxLoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTimKiemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTimKiemActionPerformed

    private void jButtonThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonThemActionPerformed
        String masp = generateMaDT();
        jTextFieldMaDT.setText(masp);
        String tensp= jTextFieldTenDT.getText();
        String hang = jComboBoxHang.getSelectedItem().toString();
        String dungluong = jTextFieldDungLuong.getText();
        String gia= jTextFieldGia.getText();
        String hinhanh= jTextFieldHinhAnh.getText();
        
        try{
            // Kiểm tra nếu cả hai trường không rỗng
            if (masp.isEmpty() || tensp.isEmpty() || hang.isEmpty() || dungluong.isEmpty() || gia.isEmpty() || hinhanh.isEmpty())
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin");
            else{
                SanPhamDTO sp=new SanPhamDTO();
                sp.setMaSP(masp);
                sp.setTenSP(jTextFieldTenDT.getText());
                sp.setHang(jComboBoxHang.getSelectedItem().toString());
                sp.setDungLuong(jTextFieldDungLuong.getText());
                sp.setDonGia(Integer.parseInt(jTextFieldGia.getText()));
                sp.setHinhAnh(jTextFieldHinhAnh.getText());

                spBLL.addSP(sp);
                loadSPlist();
                JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công");
                LamMoi();
            }
    }//GEN-LAST:event_jButtonThemActionPerformed
    catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Thông tin không hợp lệ");
        }
    }

    private void jTextFieldHinhAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHinhAnhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHinhAnhActionPerformed

    private void jTableSPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableSPMouseClicked
        int selectedRow = jTableSP.getSelectedRow();
        if (selectedRow >= 0) {
        // Lấy thông tin của dòng được chọn
        String masp = jTableSP.getValueAt(selectedRow, 1).toString();
        String tensp = jTableSP.getValueAt(selectedRow, 2).toString();
        String hang = jTableSP.getValueAt(selectedRow, 3).toString();
        String dungluong = jTableSP.getValueAt(selectedRow, 4).toString();
        String gia = jTableSP.getValueAt(selectedRow, 6).toString();
        String hinhanh = jTableSP.getValueAt(selectedRow, 7).toString();

        // Cập nhật các trường văn bản và trường khác với thông tin của dòng được chọn
        jTextFieldMaDT.setText(masp);
        jTextFieldTenDT.setText(tensp);
        jComboBoxHang.setSelectedItem(hang);
        jTextFieldDungLuong.setText(dungluong);
        jTextFieldGia.setText(gia);
        jTextFieldHinhAnh.setText(hinhanh);
        
        File file = new File(hinhanh);
        ImageIcon imageIcon = new ImageIcon(file.getAbsolutePath());
        Image image = imageIcon.getImage();
        Image scaledImage = image.getScaledInstance(100, 100, Image.SCALE_SMOOTH);
        ImageIcon scaledImageIcon = new ImageIcon(scaledImage);
        jLabelAnh.setIcon(scaledImageIcon);
    }
    }//GEN-LAST:event_jTableSPMouseClicked

    private void jButtonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAnhActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setDialogTitle("Chọn file ảnh");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filter = new FileNameExtensionFilter("JPG, PNG, GIF Images", "jpg", "png", "gif");
        chooser.setFileFilter(filter);
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            String imagePath = chooser.getSelectedFile().getPath();
            jTextFieldHinhAnh.setText(imagePath);
    }//GEN-LAST:event_jButtonAnhActionPerformed
    }
    private void jButtonLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLamMoiActionPerformed
        jTextFieldMaDT.setText("");
        jTextFieldTenDT.setText("");
        jComboBoxHang.setSelectedIndex(0);
        jTextFieldDungLuong.setText("");
        jTextFieldGia.setText("");
        jTextFieldHinhAnh.setText("");
        jLabelAnh.setIcon(null); // Clear the displayed image
        ListSelectionModel selectionModel = jTableSP.getSelectionModel();
        loadSPlist();

// Bỏ chọn tất cả các dòng
        selectionModel.clearSelection();
    }//GEN-LAST:event_jButtonLamMoiActionPerformed

    private void jButtonSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSuaActionPerformed
        int i = jTableSP.getSelectedRow();

        // Kiểm tra giá trị i
        if (i < 0 || i >= jTableSP.getRowCount()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để sửa.");
            return;
        }

        String id = modelSP.getValueAt(i, 1).toString();

        // Kiểm tra giá trị id
        if (id.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không thể xác định ID của sản phẩm.");
            return;
        }

        String name = jTextFieldTenDT.getText();
        String dungluong = jTextFieldDungLuong.getText();
//        int soluong = 0; // hoặc giữ nguyên giá trị hiện tại nếu bạn không muốn thay đổi
        int dongia;

        try {
            dongia = Integer.parseInt(jTextFieldGia.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Giá sản phẩm phải là số.");
            return;
        }

        String hinhanh = jTextFieldHinhAnh.getText();
        String hang = jComboBoxHang.getSelectedItem().toString();

        // Kiểm tra các trường khác
        if (name.isEmpty() || dungluong.isEmpty() || hinhanh.isEmpty() || hang.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đủ thông tin.");
            return;
        }

        // Tiến hành sửa sản phẩm
        spBLL.UpSP(id, name, hang, dungluong, dongia, hinhanh);
        loadSPlist();
        LamMoi();

        JOptionPane.showMessageDialog(this, "Sửa thông tin sản phẩm thành công.");

    }//GEN-LAST:event_jButtonSuaActionPerformed

    private void jButtonXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonXoaActionPerformed
        // Lấy các chỉ mục của các dòng được chọn
        int[] selectedRows = jTableSP.getSelectedRows();

        // Kiểm tra nếu có ít nhất một dòng được chọn
        if (selectedRows.length > 0) {
            // Xóa từng dòng được chọn
            for (int i : selectedRows) {
                spBLL.delSP(modelSP.getValueAt(i, 1).toString());
            }

            // Load lại danh sách sau khi xóa
            loadSPlist();

            JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ít nhất một dòng để xóa");
        }

    }//GEN-LAST:event_jButtonXoaActionPerformed

    private void jComboBoxHangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxHangActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxHangActionPerformed

    private void jButtonTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonTimKiemActionPerformed
        String loaiTimKiem = (String) jComboBoxLoc.getSelectedItem();
        String tuKhoa = jTextFieldTimKiem.getText(); // You should get this value from your GUI input field

        // Check if the search fields are empty
        if (tuKhoa.isEmpty()) {
            // Retrieve the entire list of products
            loadSPlist();
        } else {
            // Call the DAO method to perform the search
            List<SanPhamDTO> danhSachTimKiem = spDAO.timKiemSanPhamTheoLoai(loaiTimKiem, tuKhoa);

            // Update the table with the search results
            updateTable(danhSachTimKiem);
        }
    }//GEN-LAST:event_jButtonTimKiemActionPerformed

    public void loadSPlist(){
        arrSP = spBLL.getListSanPham();
//        int a = arrSP.size();
//        System.out.print(rootPaneCheckingEnabled);
        for(int i = modelSP.getRowCount()-1;i>=0;i--)
            modelSP.removeRow(i);
        for(int i = 0; i<arrSP.size();i++){
            SanPhamDTO em= arrSP.get(i);
            int stt= i+1;
            String masp= em.getMaSP();
            String tensp = em.getTenSP();
            String hang = em.getHang();
            String dungluong = em.getDungLuong();
            int soluong=em.getSoLuong();
            int dongia=(int) em.getDonGia();
            String hinhanh = em.getHinhAnh();
            Object[] row = {stt,masp,tensp,hang,dungluong,soluong,dongia,hinhanh};
            modelSP.addRow(row);
        }
    }
    
    public void LamMoi()
            {
                 jTextFieldMaDT.setText("");
        jTextFieldTenDT.setText("");
        jComboBoxHang.setSelectedIndex(0);
        jTextFieldDungLuong.setText("");
        jTextFieldGia.setText("");
        jTextFieldHinhAnh.setText("");
        jLabelAnh.setIcon(null); // Clear the displayed image
        ListSelectionModel selectionModel = jTableSP.getSelectionModel();

// Bỏ chọn tất cả các dòng
        selectionModel.clearSelection();
            }
// Tạo hàm để tạo mã tự động
    private String generateMaDT() {
        if (arrSP.size() == 0) {
            return "SP001";
        } else {
            SanPhamDTO lastSP = arrSP.get(arrSP.size() - 1);
            String lastMaSP = lastSP.getMaSP();
            int lastID = Integer.parseInt(lastMaSP.substring(2)); // Lấy phần số từ mã hiện tại
            int newID = lastID + 1;
            String newMaSP = "SP" + String.format("%03d", newID); // Format mã mới với đủ 3 chữ số
            return newMaSP;
        }
    }
    private void updateTable(List<SanPhamDTO> danhSachSanPham) {
    DefaultTableModel model = (DefaultTableModel) jTableSP.getModel();
    model.setRowCount(0);

    for (int i = 0; i < danhSachSanPham.size(); i++) {
        SanPhamDTO sanPham = danhSachSanPham.get(i);
        int stt = i + 1;
        String masp = sanPham.getMaSP();
        String tensp = sanPham.getTenSP();
        String hang = sanPham.getHang();
        String dungluong = sanPham.getDungLuong();
        int soluong = sanPham.getSoLuong();
        int dongia = (int) sanPham.getDonGia();
        String hinhanh = sanPham.getHinhAnh();

        Object[] rowData = {stt, masp, tensp, hang, dungluong, soluong, dongia, hinhanh};
        model.addRow(rowData);
    }
}


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAnh;
    private javax.swing.JButton jButtonLamMoi;
    private javax.swing.JButton jButtonSua;
    private javax.swing.JButton jButtonThem;
    private javax.swing.JButton jButtonTimKiem;
    private javax.swing.JButton jButtonXoa;
    private javax.swing.JComboBox<String> jComboBoxHang;
    private javax.swing.JComboBox<String> jComboBoxLoc;
    private javax.swing.JLabel jLabelAnh;
    private javax.swing.JLabel jLabelDungLuong;
    private javax.swing.JLabel jLabelGia;
    private javax.swing.JLabel jLabelHang;
    private javax.swing.JLabel jLabelHinhAnh;
    private javax.swing.JLabel jLabelMaDT;
    private javax.swing.JLabel jLabelTenDT;
    private javax.swing.JLabel jLabelTimKiem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSP;
    private javax.swing.JTextField jTextFieldDungLuong;
    private javax.swing.JTextField jTextFieldGia;
    private javax.swing.JTextField jTextFieldHinhAnh;
    private javax.swing.JTextField jTextFieldMaDT;
    private javax.swing.JTextField jTextFieldTenDT;
    private javax.swing.JTextField jTextFieldTimKiem;
    // End of variables declaration//GEN-END:variables
}
